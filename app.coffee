express = require('express')
app = express()
server = require('http').createServer(app)

server.listen process.env.PORT or 9000
io = require('socket.io').listen(server)

GetMeetLocation = ->
    MeetLocation[Math.round(Math.random() * (MeetLocation.length - 1))]

app.configure ->
    app.set 'port', process.env.PORT or 9000
    app.use express.static(process.cwd() + '/public')
    return
app.get '/', (req, res) ->
    res.sendfile process.cwd() + '/index.html'
    return
# Meetuplocations
MeetLocation = [
    {
        name: 'kamyshovo'
        coords: 'http://dayzdb.com/map/chernarusplus#7.120.119'
    }
    {
        name: 'Docks in Solnichniy'
        coords: 'http://dayzdb.com/map/chernarusplus#7.132.092'
    }
    {
        name: 'Farm above factory'
        coords: 'http://dayzdb.com/map/chernarusplus#7.129.083'
    }
    {
        name: 'Cap golova'
        coords: 'http://dayzdb.com/map/chernarusplus#7.083.129'
    }
    {
        name: 'Farm above Three valleys'
        coords: 'http://dayzdb.com/map/chernarusplus#6.123.100'
    }
]
# Randomized codeword for teams
io.sockets.on 'connection', (socket) ->
    socket.on 'new user', (data, callback) ->
        rooms = io.sockets.manager.rooms
        socket.username = data
        if '/lobby' of rooms and io.sockets.clients('lobby') and io.sockets.clients('lobby').length == 1
            socket.room = (Math.random() + 1).toString(36).substring(2)
            socket.join socket.room
            console.log socket.username + ' joined room ', socket.room
            io.sockets.in('lobby').emit 'move player', room: socket.room
        else
            socket.join 'lobby'
            io.sockets.in('lobby').emit 'waiting for match', {}
        callback 'YOLO'
        return
    socket.on 'move player', (data) ->
        socket.leave 'lobby'
        socket.join data.room
        console.log 'moved ' + socket.username + ' to room -> ', data.room
        io.sockets.in(data.room).emit 'match found', room: room
        return
    socket.on 'match found', (data) ->
        io.sockets.in(data.room).emit 'broadcast', location: GetMeetLocation()
        return
    socket.on 'new message', (data) ->
        io.sockets.in(socket.room).emit 'send message',
            msg: data
            username: socket.username
        return
    return

# ---
# generated by js2coffee 2.1.0